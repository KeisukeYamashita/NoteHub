<?php

// autoload_real.php @generated by Composer

<<<<<<< HEAD
class ComposerAutoloaderInit1ceff3c1a542ea76b896c81097abfe53
=======
class ComposerAutoloaderInit90a476fef889c942c51723269555e873
>>>>>>> origin/master
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }

<<<<<<< HEAD
        spl_autoload_register(array('ComposerAutoloaderInit1ceff3c1a542ea76b896c81097abfe53', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInit1ceff3c1a542ea76b896c81097abfe53', 'loadClassLoader'));
=======
        spl_autoload_register(array('ComposerAutoloaderInit90a476fef889c942c51723269555e873', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInit90a476fef889c942c51723269555e873', 'loadClassLoader'));
>>>>>>> origin/master

        $useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION');
        if ($useStaticLoader) {
            require_once __DIR__ . '/autoload_static.php';

<<<<<<< HEAD
            call_user_func(\Composer\Autoload\ComposerStaticInit1ceff3c1a542ea76b896c81097abfe53::getInitializer($loader));
=======
            call_user_func(\Composer\Autoload\ComposerStaticInit90a476fef889c942c51723269555e873::getInitializer($loader));
>>>>>>> origin/master
        } else {
            $map = require __DIR__ . '/autoload_namespaces.php';
            foreach ($map as $namespace => $path) {
                $loader->set($namespace, $path);
            }

            $map = require __DIR__ . '/autoload_psr4.php';
            foreach ($map as $namespace => $path) {
                $loader->setPsr4($namespace, $path);
            }

            $classMap = require __DIR__ . '/autoload_classmap.php';
            if ($classMap) {
                $loader->addClassMap($classMap);
            }
        }

        $loader->register(true);

        if ($useStaticLoader) {
<<<<<<< HEAD
            $includeFiles = Composer\Autoload\ComposerStaticInit1ceff3c1a542ea76b896c81097abfe53::$files;
=======
            $includeFiles = Composer\Autoload\ComposerStaticInit90a476fef889c942c51723269555e873::$files;
>>>>>>> origin/master
        } else {
            $includeFiles = require __DIR__ . '/autoload_files.php';
        }
        foreach ($includeFiles as $fileIdentifier => $file) {
<<<<<<< HEAD
            composerRequire1ceff3c1a542ea76b896c81097abfe53($fileIdentifier, $file);
=======
            composerRequire90a476fef889c942c51723269555e873($fileIdentifier, $file);
>>>>>>> origin/master
        }

        return $loader;
    }
}

<<<<<<< HEAD
function composerRequire1ceff3c1a542ea76b896c81097abfe53($fileIdentifier, $file)
=======
function composerRequire90a476fef889c942c51723269555e873($fileIdentifier, $file)
>>>>>>> origin/master
{
    if (empty($GLOBALS['__composer_autoload_files'][$fileIdentifier])) {
        require $file;

        $GLOBALS['__composer_autoload_files'][$fileIdentifier] = true;
    }
}
